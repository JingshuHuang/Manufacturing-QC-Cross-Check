version: "3.8"

services:
  # Manufacturing QC Backend
  backend:
    build:
      context: ./Manufacturing-QC-Cross-Check-Backend
      dockerfile: Dockerfile
    container_name: manufacturing-qc-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://qc_user:${DB_PASSWORD}@db:5432/qc_system
      - DEBUG=false
      - EASYOCR_GPU=false
      - API_V1_STR=/api/v1
      - PROJECT_NAME=Manufacturing QC Cross-Check System
      - UPLOAD_DIR=/app/uploads
      - MAX_FILE_SIZE=50000000
      - LOG_LEVEL=INFO
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - manufacturing-qc

  # Frontend React App
  frontend:
    build:
      context: ./Manufacturing-QC-Cross-Check-Frontend
      dockerfile: Dockerfile
    container_name: manufacturing-qc-frontend
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost
    networks:
      - manufacturing-qc

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: manufacturing-qc-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=qc_system
      - POSTGRES_USER=qc_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deploy/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    # Remove external port mapping to avoid conflicts
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U qc_user -d qc_system"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - manufacturing-qc

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: manufacturing-qc-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - backend
      - frontend
    networks:
      - manufacturing-qc

volumes:
  postgres_data:

networks:
  manufacturing-qc:
    driver: bridge
